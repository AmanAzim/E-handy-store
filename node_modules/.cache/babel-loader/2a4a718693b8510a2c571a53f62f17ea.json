{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactJs-Training\\\\e-handy-store-react -Redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypeName from './action-type-names';\nimport { storeProducts, detailProduct } from '../data';\nimport { store } from '../index'; //we need \"store\" to use \"getState\" outside of \"return (dispatch, getState)=>{}\"\n\nimport axios from 'axios'; //////////////////////////////////////////////////////////\n\nexport const asyn_setProducts = () => {\n  return dispatch => {\n    axios.post();\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = _objectSpread({}, item);\n\n      tempProducts = [...tempProducts, singleItem];\n    });\n    console.log('set_product');\n    dispatch(setProducts(tempProducts));\n  };\n};\n\nconst setProducts = products => {\n  return {\n    type: actionTypeName.SETPRODUCTS,\n    products: products\n  };\n}; //////////////////////////////////////////////////////////\n\n\nconst getItem = id => {\n  const product = store.getState().products.find(product => {\n    return product.id === id;\n  });\n  return product;\n};\n\nexport const handelDetail = id => {\n  return {\n    type: actionTypeName.HANDEL_DETAIL,\n    detailProduct: getItem(id)\n  };\n}; /////////////////////////////////////////////////////////\n\nexport const asyn_addToCart = id => {\n  return dispatch => {\n    let tempProducts = [...store.getState().products];\n    let index = tempProducts.findIndex(product => product.id === id);\n    let product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    product.total = product.price;\n    console.log('tempProducts', tempProducts);\n    dispatch(addToCart(tempProducts, product));\n    dispatch(addTotal());\n  };\n};\n\nconst addToCart = (tempProducts, product) => {\n  return {\n    type: actionTypeName.ADD_TO_CART,\n    tempProducts: tempProducts,\n    product: product //this.setState({products:tempProducts, cart:[...this.state.cart, product]}, ()=>{this.addTotal()} );\n\n  };\n};\n\nexport const addTotal = () => {\n  let subTotal = 0;\n\n  for (let i = 0; i < store.getState().cart.length; i++) {\n    subTotal += store.getState().cart[i].total;\n  }\n\n  let tempTax = subTotal * 0.1;\n  tempTax = parseFloat(tempTax.toFixed(2));\n  let total = subTotal + tempTax;\n  return {\n    type: actionTypeName.ADD_TOTAL,\n    cartSubtotal: subTotal,\n    cartTax: tempTax,\n    cartTotal: total\n  };\n};\nexport const asyn_increment = id => {\n  let tempCart = [...store.getState().cart];\n  let index = tempCart.findIndex(item => item.id === id);\n  let product = tempCart[index];\n  product.count++;\n  product.total += product.price;\n  return dispatch => {\n    dispatch(increment(tempCart));\n    dispatch(addTotal());\n  };\n};\n\nconst increment = tempCart => {\n  return {\n    type: actionTypeName.INCREMENT,\n    cart: tempCart\n  };\n};\n\nexport const asyn_decrement = id => {\n  return dispatch => {\n    let tempCart = [...store.getState().cart];\n    let index = tempCart.findIndex(item => item.id === id);\n    let product = tempCart[index];\n    product.count--;\n    product.total -= product.price;\n\n    if (product.count <= 0) {\n      let tempProducts = [...store.getState().products];\n      let index = tempProducts.findIndex(item => item.id === id);\n      let product = tempProducts[index];\n      product.inCart = false;\n      product.count = 0;\n      product.total = 0;\n      let tempCart = store.getState().cart.filter(item => item.id !== id);\n      dispatch(removeItem(tempProducts, tempCart));\n      dispatch(addTotal());\n    } else {\n      dispatch(decrement(tempCart));\n      dispatch(addTotal());\n    }\n  };\n};\n\nconst decrement = tempCart => {\n  return {\n    type: actionTypeName.DECREMENT,\n    cart: tempCart\n  };\n}; ///////////////////////////////////////////////////////////\n\n\nexport const asyn_removeItem = id => {\n  return dispatch => {\n    let tempProducts = [...store.getState().products];\n    let index = tempProducts.findIndex(item => item.id === id);\n    let product = tempProducts[index];\n    product.inCart = false;\n    product.count = 0;\n    product.total = 0;\n    let tempCart = store.getState().cart.filter(item => item.id !== id);\n    dispatch(removeItem(tempProducts, tempCart));\n    dispatch(addTotal());\n  };\n};\n\nconst removeItem = (tempProducts, tempCart) => {\n  return {\n    type: actionTypeName.REMOVE_ITEM,\n    products: tempProducts,\n    cart: tempCart\n  };\n};\n\nexport const clearCart = () => {\n  let tempProducts = [...store.getState().products];\n  tempProducts.map(item => {\n    item.inCart = false;\n    item.count = 0;\n    item.total = 0;\n  });\n  return {\n    type: actionTypeName.CLEAR_CART,\n    products: tempProducts,\n    cartSubtotal: 0,\n    cartTax: 0,\n    cartTotal: 0,\n    cart: []\n  };\n}; ///////////////////////////////////////////////////////////\n\nexport const openModal = id => {\n  const product = getItem(id);\n  return {\n    type: actionTypeName.OPEN_MODAL,\n    modalProduct: product,\n    modalOpen: true\n  };\n};\nexport const closeModal = () => {\n  return {\n    type: actionTypeName.CLOSE_MODAL,\n    modalOpen: false\n  };\n}; //////////////////////////////////////////////////////////","map":{"version":3,"sources":["D:\\ReactJs-Training\\e-handy-store-react -Redux\\src\\store\\actions.js"],"names":["actionTypeName","storeProducts","detailProduct","store","axios","asyn_setProducts","dispatch","post","tempProducts","forEach","item","singleItem","console","log","setProducts","products","type","SETPRODUCTS","getItem","id","product","getState","find","handelDetail","HANDEL_DETAIL","asyn_addToCart","index","findIndex","inCart","count","total","price","addToCart","addTotal","ADD_TO_CART","subTotal","i","cart","length","tempTax","parseFloat","toFixed","ADD_TOTAL","cartSubtotal","cartTax","cartTotal","asyn_increment","tempCart","increment","INCREMENT","asyn_decrement","filter","removeItem","decrement","DECREMENT","asyn_removeItem","REMOVE_ITEM","clearCart","map","CLEAR_CART","openModal","OPEN_MODAL","modalProduct","modalOpen","closeModal","CLOSE_MODAL"],"mappings":"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","sourcesContent":["import * as actionTypeName from './action-type-names';\r\nimport {storeProducts, detailProduct} from '../data';\r\nimport {store} from '../index';//we need \"store\" to use \"getState\" outside of \"return (dispatch, getState)=>{}\"\r\nimport axios from 'axios';\r\n\r\n//////////////////////////////////////////////////////////\r\nexport const asyn_setProducts=()=>{\r\n    return (dispatch)=>{\r\n        axios.post()\r\n        let tempProducts=[];\r\n        storeProducts.forEach((item)=>{\r\n            const singleItem={...item};\r\n            tempProducts=[...tempProducts, singleItem];\r\n        });\r\n        console.log('set_product');\r\n        dispatch(setProducts(tempProducts));\r\n    }\r\n};\r\nconst setProducts=(products)=>{\r\n    return {\r\n        type:actionTypeName.SETPRODUCTS,\r\n        products:products\r\n    }\r\n};\r\n//////////////////////////////////////////////////////////\r\n\r\nconst getItem=(id)=>{\r\n    const product= store.getState().products.find((product) => {\r\n        return product.id === id;\r\n    });\r\n\r\n    return product;\r\n};\r\nexport const handelDetail=(id)=>{\r\n    return {\r\n        type:actionTypeName.HANDEL_DETAIL,\r\n        detailProduct:getItem(id)\r\n    };\r\n};\r\n/////////////////////////////////////////////////////////\r\nexport const asyn_addToCart=(id)=>{\r\n    return (dispatch)=>{\r\n        let tempProducts=[...store.getState().products];\r\n        let index=tempProducts.findIndex(product=>product.id===id);\r\n        let product=tempProducts[index];\r\n\r\n        product.inCart=true;\r\n        product.count=1;\r\n        product.total=product.price;\r\n        console.log('tempProducts',tempProducts);\r\n        dispatch(addToCart(tempProducts, product));\r\n        dispatch(addTotal());\r\n    };\r\n};\r\nconst  addToCart=(tempProducts, product)=>{\r\n    return {\r\n        type:actionTypeName.ADD_TO_CART,\r\n        tempProducts:tempProducts,\r\n        product:product\r\n    }\r\n    //this.setState({products:tempProducts, cart:[...this.state.cart, product]}, ()=>{this.addTotal()} );\r\n};\r\nexport const addTotal=()=>{\r\n    let subTotal=0;\r\n    for(let i=0;i<store.getState().cart.length;i++){\r\n        subTotal +=store.getState().cart[i].total;\r\n    }\r\n\r\n    let tempTax=subTotal*0.1;\r\n    tempTax=parseFloat(tempTax.toFixed(2));\r\n\r\n    let total=subTotal+tempTax;\r\n\r\n    return {\r\n        type:actionTypeName.ADD_TOTAL,\r\n        cartSubtotal:subTotal,\r\n        cartTax:tempTax,\r\n        cartTotal:total\r\n    };\r\n};\r\n\r\nexport const asyn_increment=(id)=>{\r\n\r\n    let tempCart=[...store.getState().cart];\r\n    let index=tempCart.findIndex(item=>item.id===id);\r\n    let product=tempCart[index];\r\n\r\n    product.count++;\r\n    product.total+=product.price;\r\n\r\n    return (dispatch)=>{\r\n        dispatch(increment(tempCart));\r\n        dispatch(addTotal());\r\n    }\r\n};\r\nconst increment=(tempCart)=>{\r\n    return {\r\n        type:actionTypeName.INCREMENT,\r\n        cart:tempCart\r\n    }\r\n};\r\nexport const asyn_decrement=(id)=>{\r\n    return (dispatch)=>{\r\n        let tempCart=[...store.getState().cart];\r\n        let index=tempCart.findIndex(item=>item.id===id);\r\n        let product=tempCart[index];\r\n\r\n        product.count--;\r\n        product.total-=product.price;\r\n\r\n        if(product.count<=0){\r\n\r\n             let tempProducts=[...store.getState().products];\r\n             let index=tempProducts.findIndex(item=>item.id===id);\r\n             let product=tempProducts[index];\r\n\r\n             product.inCart=false;\r\n             product.count=0;\r\n             product.total=0;\r\n\r\n             let tempCart=store.getState().cart.filter(item=>item.id!==id);\r\n\r\n             dispatch(removeItem(tempProducts, tempCart));\r\n             dispatch(addTotal());\r\n\r\n        } else {\r\n            dispatch(decrement(tempCart));\r\n            dispatch(addTotal());\r\n        }\r\n    };\r\n};\r\nconst decrement=(tempCart)=>{\r\n    return {\r\n        type:actionTypeName.DECREMENT,\r\n        cart:tempCart\r\n    }\r\n};\r\n///////////////////////////////////////////////////////////\r\nexport const asyn_removeItem=(id)=>{\r\n    return (dispatch)=>{\r\n        let tempProducts=[...store.getState().products];\r\n        let index=tempProducts.findIndex(item=>item.id===id);\r\n        let product=tempProducts[index];\r\n\r\n        product.inCart=false;\r\n        product.count=0;\r\n        product.total=0;\r\n\r\n        let tempCart=store.getState().cart.filter(item=>item.id!==id);\r\n\r\n        dispatch(removeItem(tempProducts, tempCart));\r\n        dispatch(addTotal());\r\n    }\r\n};\r\nconst removeItem=(tempProducts, tempCart)=>{\r\n    return {\r\n        type:actionTypeName.REMOVE_ITEM,\r\n        products:tempProducts,\r\n        cart:tempCart\r\n    };\r\n};\r\n\r\n\r\nexport const clearCart=()=>{\r\n    let tempProducts=[...store.getState().products];\r\n    tempProducts.map(item=>{\r\n        item.inCart=false;\r\n        item.count=0;\r\n        item.total=0;\r\n    });\r\n\r\n    return {\r\n        type:actionTypeName.CLEAR_CART,\r\n        products:tempProducts,\r\n        cartSubtotal:0,\r\n        cartTax:0,\r\n        cartTotal:0,\r\n        cart:[]\r\n    }\r\n};\r\n///////////////////////////////////////////////////////////\r\nexport const openModal=(id)=>{\r\n    const product=getItem(id);\r\n    return {\r\n        type:actionTypeName.OPEN_MODAL,\r\n        modalProduct:product,\r\n        modalOpen:true\r\n    };\r\n};\r\nexport const closeModal=()=>{\r\n    return {\r\n        type:actionTypeName.CLOSE_MODAL,\r\n        modalOpen:false\r\n    };\r\n};\r\n//////////////////////////////////////////////////////////\r\n\r\n"]},"metadata":{},"sourceType":"module"}