{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactJs-Training\\\\e-handy-store-react -Redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypeName from './action-type-names';\nimport { storeProducts, detailProduct } from '../data';\nimport { store } from '../index';\nexport const asyn_setProducts = () => {\n  return dispatch => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = _objectSpread({}, item);\n\n      tempProducts = [...tempProducts, singleItem];\n    });\n    dispatch(setProducts(tempProducts));\n  };\n};\n\nconst setProducts = products => {\n  return {\n    type: actionTypeName.SETPRODUCTS,\n    products: products\n  };\n}; ////////////////////////////////////////////////\n\n\nconst getItem = id => {\n  const product = store.getState().products.find(product => {\n    return product.id === id;\n  });\n  console.log('product', product);\n  return product;\n};\n\nexport const handelDetail = id => {\n  return {\n    type: actionTypeName.HANDEL_DETAIL,\n    detailProduct: getItem(id)\n  };\n};","map":{"version":3,"sources":["D:\\ReactJs-Training\\e-handy-store-react -Redux\\src\\store\\actions.js"],"names":["actionTypeName","storeProducts","detailProduct","store","asyn_setProducts","dispatch","tempProducts","forEach","item","singleItem","setProducts","products","type","SETPRODUCTS","getItem","id","product","getState","find","console","log","handelDetail","HANDEL_DETAIL"],"mappings":";AAAA,OAAO,KAAKA,cAAZ,MAAgC,qBAAhC;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,SAA3C;AACA,SAAQC,KAAR,QAAoB,UAApB;AAEA,OAAO,MAAMC,gBAAgB,GAAC,MAAI;AAC9B,SAAQC,QAAD,IAAY;AACf,QAAIC,YAAY,GAAC,EAAjB;AACAL,IAAAA,aAAa,CAACM,OAAd,CAAuBC,IAAD,IAAQ;AAC1B,YAAMC,UAAU,qBAAKD,IAAL,CAAhB;;AACAF,MAAAA,YAAY,GAAC,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAb;AACH,KAHD;AAKAJ,IAAAA,QAAQ,CAACK,WAAW,CAACJ,YAAD,CAAZ,CAAR;AACH,GARD;AASH,CAVM;;AAWP,MAAMI,WAAW,GAAEC,QAAD,IAAY;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAACZ,cAAc,CAACa,WADjB;AAEHF,IAAAA,QAAQ,EAACA;AAFN,GAAP;AAIH,CALD,C,CAMA;;;AAEA,MAAMG,OAAO,GAAEC,EAAD,IAAM;AAChB,QAAMC,OAAO,GAAEb,KAAK,CAACc,QAAN,GAAiBN,QAAjB,CAA0BO,IAA1B,CAAgCF,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACD,EAAR,KAAeA,EAAtB;AACH,GAFc,CAAf;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB;AACA,SAAOA,OAAP;AACH,CAND;;AAOA,OAAO,MAAMK,YAAY,GAAEN,EAAD,IAAM;AAC5B,SAAO;AACHH,IAAAA,IAAI,EAACZ,cAAc,CAACsB,aADjB;AAEHpB,IAAAA,aAAa,EAACY,OAAO,CAACC,EAAD;AAFlB,GAAP;AAIH,CALM","sourcesContent":["import * as actionTypeName from './action-type-names';\r\nimport {storeProducts, detailProduct} from '../data';\r\nimport {store} from '../index';\r\n\r\nexport const asyn_setProducts=()=>{\r\n    return (dispatch)=>{\r\n        let tempProducts=[];\r\n        storeProducts.forEach((item)=>{\r\n            const singleItem={...item};\r\n            tempProducts=[...tempProducts, singleItem];\r\n        });\r\n\r\n        dispatch(setProducts(tempProducts));\r\n    }\r\n};\r\nconst setProducts=(products)=>{\r\n    return {\r\n        type:actionTypeName.SETPRODUCTS,\r\n        products:products\r\n    }\r\n};\r\n////////////////////////////////////////////////\r\n\r\nconst getItem=(id)=>{\r\n    const product= store.getState().products.find((product) => {\r\n        return product.id === id;\r\n    });\r\n    console.log('product', product);\r\n    return product;\r\n};\r\nexport const handelDetail=(id)=>{\r\n    return {\r\n        type:actionTypeName.HANDEL_DETAIL,\r\n        detailProduct:getItem(id)\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}