{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs-Training\\\\e-handy-store-react -Redux\\\\src\\\\components\\\\modal\\\\Modal.js\";\nimport React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport './Modal.css';\nimport { ProductContext } from '../../context';\nimport { ButtonContainerDark } from '../Button';\nimport Styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as actions from \"../../store/actions\";\n\nclass Modal extends Component {\n  render() {\n    //https://medium.freecodecamp.org/hitchhikers-guide-to-react-router-v4-4b12e369d10\n    //console.log(this.props.location);//Will give the full path address of current route\n    //console.log(this.props.match);//Will give the path address that matches to all the paths\n    //console.log(this.props.history);\n    const _this$props$modalProd = this.props.modalProduct,\n          img = _this$props$modalProd.img,\n          title = _this$props$modalProd.title,\n          price = _this$props$modalProd.price;\n    let modal = null;\n\n    if (this.props.modalOpen) {\n      modal = React.createElement(\"div\", {\n        className: \"ModalContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-8 col-md-6 col-lg-4 p-5 mx-auto text-center\",\n        id: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Item added to the cart\"), React.createElement(\"img\", {\n        src: img,\n        className: \"img-fluid\",\n        alt: \"Product Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, title), React.createElement(\"h5\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Price: $\", price), React.createElement(NavLink, {\n        to: this.props.location.pathname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(ButtonContainerDark, {\n        onClick: () => this.props.onCloseModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Continue Shopping\")), React.createElement(NavLink, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ButtonContainerDark, {\n        cart: true,\n        onClick: () => this.props.onCloseModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Go to Cart\"))))));\n    }\n\n    return modal;\n  }\n\n}\n\nModal.contextType = ProductContext;\n\nconst mapStateToProps = state => {\n  return {\n    modalProduct: state.modalProduct,\n    modalOpen: state.modalOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCloseModal: () => dispatch(actions.closeModal())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Modal));","map":{"version":3,"sources":["D:\\ReactJs-Training\\e-handy-store-react -Redux\\src\\components\\modal\\Modal.js"],"names":["React","Component","NavLink","withRouter","ProductContext","ButtonContainerDark","Styled","connect","actions","Modal","render","props","modalProduct","img","title","price","modal","modalOpen","location","pathname","onCloseModal","contextType","mapStateToProps","state","mapDispatchToProps","dispatch","closeModal"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,kBAAlC;AACA,OAAO,aAAP;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,mBAAR,QAAkC,WAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;AAEA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAI1BS,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AAJK,kCAKqB,KAAKC,KAAL,CAAWC,YALhC;AAAA,UAKEC,GALF,yBAKEA,GALF;AAAA,UAKOC,KALP,yBAKOA,KALP;AAAA,UAKcC,KALd,yBAKcA,KALd;AAOL,QAAIC,KAAK,GAAC,IAAV;;AAEA,QAAG,KAAKL,KAAL,CAAWM,SAAd,EAAwB;AACpBD,MAAAA,KAAK,GACD;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iDAAf;AAAiE,QAAA,EAAE,EAAC,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAK,QAAA,GAAG,EAAEH,GAAV;AAAe,QAAA,SAAS,EAAC,WAAzB;AAAqC,QAAA,GAAG,EAAC,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,KAAL,CAHJ,EAII;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoCC,KAApC,CAJJ,EAMI,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWO,QAAX,CAAoBC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,mBAAD;AAAqB,QAAA,OAAO,EAAE,MAAI,KAAKR,KAAL,CAAWS,YAAX,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CANJ,EAUI,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB,oBAAC,mBAAD;AAAqB,QAAA,IAAI,MAAzB;AAA0B,QAAA,OAAO,EAAE,MAAI,KAAKT,KAAL,CAAWS,YAAX,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApB,CAVJ,CADJ,CADJ,CADJ,CADJ;AAoBH;;AAED,WAAQJ,KAAR;AACH;;AArCyB;;AAAxBP,K,CAEKY,W,GAAYjB,c;;AAsCvB,MAAMkB,eAAe,GAAEC,KAAD,IAAS;AAC3B,SAAO;AACHX,IAAAA,YAAY,EAACW,KAAK,CAACX,YADhB;AAEHK,IAAAA,SAAS,EAACM,KAAK,CAACN;AAFb,GAAP;AAIH,CALD;;AAMA,MAAMO,kBAAkB,GAAEC,QAAD,IAAY;AACjC,SAAO;AACHL,IAAAA,YAAY,EAAC,MAAIK,QAAQ,CAACjB,OAAO,CAACkB,UAAR,EAAD;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAevB,UAAU,CAACI,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,KAA7C,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink, withRouter} from 'react-router-dom';\r\nimport './Modal.css';\r\nimport {ProductContext} from '../../context';\r\nimport {ButtonContainerDark} from '../Button';\r\nimport Styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from \"../../store/actions\";\r\n\r\nclass Modal extends Component {\r\n\r\n    static contextType=ProductContext;\r\n\r\n    render() {\r\n        //https://medium.freecodecamp.org/hitchhikers-guide-to-react-router-v4-4b12e369d10\r\n        //console.log(this.props.location);//Will give the full path address of current route\r\n        //console.log(this.props.match);//Will give the path address that matches to all the paths\r\n        //console.log(this.props.history);\r\n        const {img, title, price}=this.props.modalProduct;\r\n\r\n        let modal=null;\r\n\r\n        if(this.props.modalOpen){\r\n            modal=(\r\n                <div className=\"ModalContainer\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8 col-md-6 col-lg-4 p-5 mx-auto text-center\" id=\"modal\">\r\n                                <h5>Item added to the cart</h5>\r\n                                <img src={img} className=\"img-fluid\" alt=\"Product Image\"></img>\r\n                                <h5>{title}</h5>\r\n                                <h5 className=\"text-muted\">Price: ${price}</h5>\r\n\r\n                                <NavLink to={this.props.location.pathname}>\r\n                                    <ButtonContainerDark onClick={()=>this.props.onCloseModal()}>Continue Shopping</ButtonContainerDark>\r\n                                </NavLink>\r\n\r\n                                <NavLink to=\"/cart\"><ButtonContainerDark cart onClick={()=>this.props.onCloseModal()}>Go to Cart</ButtonContainerDark></NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (modal);\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        modalProduct:state.modalProduct,\r\n        modalOpen:state.modalOpen\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        onCloseModal:()=>dispatch(actions.closeModal())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Modal));\r\n"]},"metadata":{},"sourceType":"module"}